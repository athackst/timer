# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Jekyll site CI/CD

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Run on every pull request
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    # * is a special character in YAML so you have to quote this string
    # Generate from https://crontab.guru/
    #        ┌───────────── minute (0 - 59)
    #        │ ┌───────────── hour (0 - 23)
    #        │ │ ┌───────────── day of the month (1 - 31)
    #        │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │ │ │ │ │
    #        │ │ │ │ │
    #        │ │ │ │ │
    #        * * * * *
    - cron: "0 0 * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      base_url: ${{ steps.pages.outputs.base_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@32110d4e311bd8996b2a82bf2a43b714ccc91777
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 4 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          JEKYLL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug output
        run: |
          tree
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Extract
        run: |
          mkdir _site
          tar --directory _site -xvf "artifact.tar"
          tree
      - name: Generate ignore list from HTML files
        run: |
          HOSTNAME="${{ needs.build.outputs.base_url }}"
          
          # Find all .html files, remove the _site prefix, and prepend the hostname
          IGNORE_LIST=$(find _site -name "*.html" | sed "s|^_site|$HOSTNAME|")

          # Add additional ignored URLs manually
          IGNORE_LIST+="
          https://www.linkedin.com/in/allisonthackston
          /twitter.com/"

          # Save as a multi-line GitHub output
          {
            echo "ignore_list<<EOF"
            echo "$IGNORE_LIST"
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Test with htmlproofer
        uses: athackst/htmlproofer-action@main
        with:
          ignore_urls: |
            ${{ env.ignore_list }}

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
